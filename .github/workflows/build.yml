name: Build

on:
    push:
        branches: [ 'main' ]
    schedule:
        -   cron: '0 0 * * *'

env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: docker.io
    IMAGE_NAME: enabel/phpqa
    LATEST_VERSION: 8.2

jobs:
    push_to_registry:
        strategy:
            matrix:
                versions: [ '8.0' ]
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2

            -   name: Log in to Docker Hub
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            -   name: Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v4
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            -   name: Build and push Docker image
                uses: docker/build-push-action@v4
                with:
                    context: ${{ matrix.versions }}
                    push: true
                    tags: ${{ env.IMAGE_NAME }}:${{ matrix.versions }}
                    labels: ${{ steps.meta.outputs.labels }}
    latest:
        name: Push latest Docker image to Docker Hub
        runs-on: ubuntu-latest
        needs: [ push_to_registry ]
        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2

            -   name: Log in to Docker Hub
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            -   name: Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v4
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            -   name: Build and push Docker image
                uses: docker/build-push-action@v4
                with:
                    context: ${{ env.LATEST_VERSION }}
                    push: true
                    tags: ${{ env.IMAGE_NAME }}:latest
                    labels: ${{ steps.meta.outputs.labels }}
